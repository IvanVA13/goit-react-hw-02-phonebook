{"version":3,"sources":["Filter/Filter.module.scss","ContactForm/ContactForm.module.scss","Section/Section.js","ContactForm/ContactForm.js","Filter/Filter.js","ContactList/ContactList.js","App.js","index.js","ContactList/ContactList.module.scss","Section/Section.module.scss"],"names":["module","exports","Section","title","children","main","className","styles","section","defaultProps","ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","submitHandler","reset","this","form","onSubmit","input","onChange","type","pattern","required","btn","Component","Filter","onFilter","ContactList","contacts","delContact","length","map","id","contact","onClick","App","filter","idGen","shortid","generate","data","newContact","prevState","find","alert","handleFilter","handleDelContact","normalizedFilter","toLowerCase","visibleContacts","req","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0210bd7d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"example\":\"Filter_example__2ZinJ\",\"input-layout\":\"Filter_input-layout__3pNug\",\"title\":\"Filter_title__2Iwvr\",\"input\":\"Filter_input__3ULeV\",\"btn\":\"Filter_btn__M1deG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1_N34\",\"input-layout\":\"ContactForm_input-layout__3EswU\",\"title\":\"ContactForm_title__EJkzh\",\"input\":\"ContactForm_input__3W5jb\",\"btn\":\"ContactForm_btn__3Ujiv\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Section.module.scss';\n\nconst Section = ({ title, children, main }) => (\n  <section className={styles.section}>\n    {main ? (\n      <h1 className={styles['main-title']}>{title}</h1>\n    ) : (\n      <h2 className={styles.title}>{title}</h2>\n    )}\n    {children}\n  </section>\n);\n\nSection.defaultProps = {\n  title: '',\n  main: false,\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  main: PropTypes.bool,\n};\n\nexport default Section;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.scss';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.submitHandler(this.state);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <div className={styles['input-layout']}>\n          <label className={styles.title}>\n            Name\n            <input\n              className={styles.input}\n              onChange={this.handleChange}\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n            />\n          </label>\n        </div>\n        <div className={styles['input-layout']}>\n          <label className={styles.title}>\n            Number\n            <input\n              className={styles.input}\n              onChange={this.handleChange}\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n            />\n          </label>\n        </div>\n        <button className={styles.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  submitHandler: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import { Component } from 'react';\nimport styles from './Filter.module.scss';\nimport PropTypes from 'prop-types';\n\nclass Filter extends Component {\n  render() {\n    const { value, onFilter } = this.props;\n    return (\n      <div className={styles['input-layout']}>\n        <label className={styles.title}>\n          Find contacts by name\n          <input\n            className={styles.input}\n            type=\"text\"\n            value={value}\n            onChange={onFilter}\n          />\n        </label>\n      </div>\n    );\n  }\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { Component } from 'react';\nimport styles from './ContactList.module.scss';\nimport PropTypes from 'prop-types';\n\nclass ContactList extends Component {\n  render() {\n    const { contacts, delContact } = this.props;\n    return (\n      contacts.length !== 0 && (\n        <ul className={styles['contacts-list']}>\n          {contacts.map(({ name, number, id }) => {\n            return (\n              <li className={styles['contacts-list-item']} key={id}>\n                <div className={styles['contact-container']}>\n                  <span className={styles.contact}>{name}:</span>\n                  <span className={styles.contact}>{number}</span>\n                  <button\n                    className={styles.btn}\n                    type=\"button\"\n                    onClick={() => delContact(id)}\n                  >\n                    Delete\n                  </button>\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      )\n    );\n  }\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default ContactList;\n","import { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport Section from './Section';\r\nimport ContactForm from './ContactForm';\r\nimport Filter from './Filter';\r\nimport ContactList from './ContactList';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n  };\r\n\r\n  idGen = () => shortid.generate();\r\n\r\n  submitHandler = data => {\r\n    const newContact = {\r\n      name: data.name,\r\n      number: data.number,\r\n      id: this.idGen(),\r\n    };\r\n\r\n    this.setState(prevState => {\r\n      if (\r\n        prevState.contacts.find(contact => contact.name === newContact.name)\r\n      ) {\r\n        alert(`${newContact.name} is already in contacts`);\r\n      } else {\r\n        return {\r\n          contacts: [...prevState.contacts, newContact],\r\n        };\r\n      }\r\n    });\r\n  };\r\n\r\n  handleFilter = e => this.setState({ filter: e.target.value });\r\n\r\n  handleDelContact = id =>\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\r\n    }));\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n    const visibleContacts = contacts.filter(req =>\r\n      req.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n    return (\r\n      <>\r\n        <Section title={'Phonebook'} main={true}>\r\n          <ContactForm submitHandler={this.submitHandler} />\r\n        </Section>\r\n        <Section title={'Contacts'}>\r\n          <Filter value={filter} onFilter={this.handleFilter} />\r\n          <ContactList\r\n            contacts={visibleContacts}\r\n            delContact={this.handleDelContact}\r\n          />\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import 'modern-normalize/modern-normalize.css';\nimport './styles.scss';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts-list\":\"ContactList_contacts-list__1O-oS\",\"contacts-list-item\":\"ContactList_contacts-list-item__3sA1H\",\"contact-container\":\"ContactList_contact-container__1Ncfi\",\"btn\":\"ContactList_btn__2kADi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__32nqL\",\"main-title\":\"Section_main-title__1rKoF\",\"title\":\"Section_title__buj3I\"};"],"sourceRoot":""}